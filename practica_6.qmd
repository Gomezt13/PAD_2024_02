---
title: "Proctica 6"
author: "Euler Gomez Torres"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

# como usar cuarto?

## fuente

-   Negrita: **esto es fuente negrita**
-   Cursiva: *Solanum tuberosas*

##formulas matemáticas

Este es are de una circunferencia $$Area_c=pi\cdot r^2$$

Esta es una formula cualquiera $$\frac{\left[\left(2x-1\right)^2-1\right]}{4}=k$$

# Mi primera pagina web

1. Tener mi proyecto
2. Conectar mi poyecto a Github
3. tener un archivo en formato html lamado `index.html`
4. hacer push

# Modelos liniales mixtos



##importar

```{r}

source('https://inkaverse.com/setup.r')

library(inti)
library(googlesheets4)

url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"

gs <- as_sheets_id(url)

fb <- googlesheets4::range_read(ss = gs, sheet = "fb")

str(fb)

```
## Modelo lineal

```{r}
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
          , data = fb)

anova(modelo)

plot(modelo)

```
### Boxplot

```{r}
ggplot(fb, aes(x = geno , y = lfa, colour = riego)) + geom_boxplot(outlier.colour = "red",outlier.shape = 16, outlier.size = 2) + labs(title = "Boxplot con interacción de niveles de riego y genotipo", x = "interacción Riego y Genotipo", y = "Area Foliar en cm^2") + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Modelo lineal

```{r}
modelo_1 <- aov(formula = hi ~ bloque + riego + geno + riego*geno
          , data = fb)

anova(modelo_1)

plot(modelo_1)

```
### Boxplot

```{r}
ggplot(fb, aes(x = geno , y = hi, colour = riego)) + geom_boxplot(outlier.colour = "red",outlier.shape = 16, outlier.size = 2) + labs(title = "Boxplot con interacción de niveles de riego y genotipo", x = "interacción Riego y Genotipo", y = "Índice de cosecha") + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Modelo lineal mixto
```{r}
library(lme4)
model <- lmer(formula = lfa ~ riego + geno + riego*geno + (1 | bloque), data = fb)

anova(model)

plot(model)

ol <- boxplot(lfa ~  riego*geno , fb)

ol

```

```{r}
mod <- remove_outliers(data = fb, formula = lfa ~ riego + geno + riego*geno + (1 | bloque), plot_diag = T)

mod
```
# Comparacion de media

```{r}
modeloo <- lm(formula = lfa ~ bloque + riego + geno + riego*geno
          , data = fb)

anova(modeloo)

```

## Prueba de Tukey

```{r}
library(agricolae)

tukey_result <- HSD.test(modeloo, c("geno", "riego"), group = TRUE)

tukey_result

print(tukey_result)

plot(tukey_result)

grupos <- tukey_result$groups %>% 
  rownames_to_column("tratamientos") %>% 
  separate(tratamientos, into= c("geno","riego"), sep = ":")

str(grupos)

ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = "dodge", color = "skyblue") + geom_text(aes(label = groups), position = position_dodge(width = 0.9), vjust = -0.5) +  # Aquí se añaden las etiquetas de 'groups' encima de las barras
  labs(x = "Genotipo", y = "LFA", fill=("Riego")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + ggtitle("Gráfico de barras: LFA por genotipo y riego")

```

# emeans comparación de medias

```{r}
library(emmeans)
library(multcomp)

models <- lmer(formula = hi ~ (1 | bloque) + riego*geno, data = fb)

anova(models)

cm1 <- emmeans(models, ~ geno | riego) %>% 
  cld(Letters = letters, reversed = T)

cm

cm2 <- emmeans(models, ~ riego | geno) %>% 
  cld(Letters = letters, reversed = T)

cm2

cm3 <- emmeans(models, ~ riego * geno) %>% 
  cld(Letters = letters, reversed = T)

cm3
```
## graficos

```{r}
cm1_df <- as.data.frame(cm3) %>% 
  rename(sig = ".group")

ggplot(cm1_df, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = "dodge", color = "skyblue") +
  geom_text(aes(label = sig, y = emmean), position = position_dodge(width = 0.9), vjust = -0.5) +
  labs(x = "Genotipo", y = "Media estimada (emmeans)", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Gráfico de medias estimadas por genotipo y riego")
```

# Analisis multivariado
```{r}
str(fb)
```
## Correlación
```{r}
# Selecciona solo las columnas numéricas para evitar errores
numeric_data <- fb[, sapply(fb, is.numeric)]
cor_matrix <- cor(numeric_data)

# Ver la matriz de correlación
print(cor_matrix)


```
## Visualización de la matriz de correlación

```{r}
fb %>% 
  select_if(is.numeric) %>% 
  dplyr::select(!c("block")) %>% 
  pairs.panels(x = .
               , hist.col = "red"
               , pch = 21
               , stars = TRUE
               , scale = TRUE
               ,lm = TRUE
               )
```
Otro

```{r}
library(psych)
pairs.panels(fb, 
             pch=20,
             stars=T,
             main="Gráfico de Correlación")

```
## Análisis de Componentes Principales (PCA)
```{r}
# Cargar librerías necesarias
library(dplyr)
library(FactoMineR)

mv <- fb %>% 
  group_by(riego, geno) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>% 
  PCA(scale.unit = T, quali.sup = c(1:4), graph = F)

p1 <- plot (mv
     , choix="ind"
     , habillage=1)
p2 <- plot (mv
     , choix="var")
list(p1, p2) %>% 
  plot_grid(plotlist = ., nrow = 1)

```

